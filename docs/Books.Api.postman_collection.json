{
	"info": {
		"_postman_id": "9cf82d2b-4a3a-4327-bf75-d1dd0c7d8e81",
		"name": "Books.Api",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "odata",
			"item": [
				{
					"name": "Books",
					"item": [
						{
							"name": "3 books",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;odata.metadata=;odata.streaming=true"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/Books?$top=3",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"Books"
									],
									"query": [
										{
											"key": "$top",
											"value": "3"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "books with 'and' in the title",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;odata.metadata=;odata.streaming=true"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/Books?$filter=contains(title,'and')",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"Books"
									],
									"query": [
										{
											"key": "$filter",
											"value": "contains(title,'and')"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "book by ID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;odata.metadata=minimal;odata.streaming=true"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/Books(A125C5BD-4F8E-4794-9C36-76E401FB4F24)",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"Books(A125C5BD-4F8E-4794-9C36-76E401FB4F24)"
									]
								}
							},
							"response": []
						},
						{
							"name": "book by ID with author",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;odata.metadata=minimal;odata.streaming=true"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/Books(A125C5BD-4F8E-4794-9C36-76E401FB4F24)?$expand=author",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"Books(A125C5BD-4F8E-4794-9C36-76E401FB4F24)"
									],
									"query": [
										{
											"key": "$expand",
											"value": "author"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "books with authors",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;odata.metadata=minimal;odata.streaming=true"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/Books?$expand=author",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"Books"
									],
									"query": [
										{
											"key": "$expand",
											"value": "author"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "book count",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;odata.metadata=minimal;odata.streaming=true"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/Books/$count",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"Books",
										"$count"
									]
								}
							},
							"response": []
						},
						{
							"name": "recently published books",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;odata.metadata=minimal;odata.streaming=true"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/Books?$filter=DatePublished gt 2023-05-01",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"Books"
									],
									"query": [
										{
											"key": "$filter",
											"value": "DatePublished gt 2023-05-01"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "only IDs and titles",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;odata.metadata=minimal;odata.streaming=true"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/Books?$select=id,title",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"Books"
									],
									"query": [
										{
											"key": "$select",
											"value": "id,title"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Authors",
					"item": [
						{
							"name": "authors",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;odata.metadata=minimal;odata.streaming=true"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/Authors?$top=2",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"Authors"
									],
									"query": [
										{
											"key": "$top",
											"value": "2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "author by ID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;odata.metadata=minimal;odata.streaming=true"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/Authors(8e6a9434-87f5-46b2-a6c3-522dc35d8eef)",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"Authors(8e6a9434-87f5-46b2-a6c3-522dc35d8eef)"
									]
								}
							},
							"response": []
						},
						{
							"name": "author by by ID",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;odata.metadata=minimal;odata.streaming=true"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Birthday\": \"1947-09-21T00:00:00+03:00\",\r\n    \"FirstName\": \"Stephen\",\r\n    \"LastName\": \"Queen\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/Authors(8e6a9434-87f5-46b2-a6c3-522dc35d8eef)",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"Authors(8e6a9434-87f5-46b2-a6c3-522dc35d8eef)"
									]
								}
							},
							"response": []
						},
						{
							"name": "author by ID",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;odata.metadata=minimal;odata.streaming=true"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Birthday\": \"1947-09-21T00:00:00+03:00\",\r\n    \"FirstName\": \"Stephen\",\r\n    \"LastName\": \"Queen\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/Authors(8e6a9434-87f5-46b2-a6c3-522dc35d8eef)",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"Authors(8e6a9434-87f5-46b2-a6c3-522dc35d8eef)"
									]
								}
							},
							"response": []
						},
						{
							"name": "authors with books",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;odata.metadata=minimal;odata.streaming=true"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/Authors?$expand=Books",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"Authors"
									],
									"query": [
										{
											"key": "$expand",
											"value": "Books"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "authors with with book by ID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;odata.metadata=minimal;odata.streaming=true"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/Authors?$expand=Books($filter=id eq A125C5BD-4F8E-4794-9C36-76E401FB4F24)",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"Authors"
									],
									"query": [
										{
											"key": "$expand",
											"value": "Books($filter=id eq A125C5BD-4F8E-4794-9C36-76E401FB4F24)"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "authors with book count",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;odata.metadata=minimal;odata.streaming=true"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/Authors?&$expand=Books($count=true;$top=0)",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"Authors"
									],
									"query": [
										{
											"key": null,
											"value": null
										},
										{
											"key": "$expand",
											"value": "Books($count=true;$top=0)"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "author count",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;odata.metadata=minimal;odata.streaming=true"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/Authors/$count",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"Authors",
										"$count"
									]
								}
							},
							"response": []
						},
						{
							"name": "author",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"firstname\": \"string\",\r\n  \"lastname\": \"string\",\r\n  \"birthday\": \"2023-06-18T19:25:10.598Z\",\r\n  \"organizationId\": \"5D8E6753-1479-408E-BB3D-CB3A02BE486C\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/Authors?&$expand=Books($count=true;$top=0)",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"Authors"
									],
									"query": [
										{
											"key": null,
											"value": null
										},
										{
											"key": "$expand",
											"value": "Books($count=true;$top=0)"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "v1",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json;odata.metadata=minimal;odata.streaming=true"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;odata.metadata=minimal;odata.streaming=true"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/odata",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"odata"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;odata.metadata=minimal;odata.streaming=true"
								}
							],
							"cookie": [],
							"body": "{\n  \"typeAnnotation\": {\n    \"typeName\": \"esse id mollit\"\n  },\n  \"entitySets\": [\n    {\n      \"typeAnnotation\": {\n        \"typeName\": \"laboris\"\n      },\n      \"url\": \"http://dJIdSuPFJBSjMRxBARDFZNkxFRwIePQq.pcjpQ9tLRoRWFPPjogxI1w+SlUPdEujm5Ut3W\",\n      \"name\": \"quis veniam eu ex proident\",\n      \"title\": \"cupidatat deserunt adipisicing\"\n    },\n    {\n      \"typeAnnotation\": {\n        \"typeName\": \"velit deserunt\"\n      },\n      \"url\": \"https://JQpbHgdX.opK1FAma48CSexEGPUH,oW2EdE\",\n      \"name\": \"in\",\n      \"title\": \"in\"\n    }\n  ],\n  \"singletons\": [\n    {\n      \"typeAnnotation\": {\n        \"typeName\": \"mollit amet sed\"\n      },\n      \"url\": \"https://JJLwjyODaAyCWUlLqv.csORoPz3yGehGIz-raYJhnKovjtuYszEo-C.SPTT3th6C\",\n      \"name\": \"non cillum est\",\n      \"title\": \"proident Lorem\"\n    },\n    {\n      \"typeAnnotation\": {\n        \"typeName\": \"sit minim incididunt occaecat\"\n      },\n      \"url\": \"http://UonUujttPHRjuM.ypgLKB1Au2uoQIKVvlsRyrcXz0PhQU8\",\n      \"name\": \"consectetur fugiat sit ut\",\n      \"title\": \"ipsum\"\n    }\n  ],\n  \"functionImports\": [\n    {\n      \"typeAnnotation\": {\n        \"typeName\": \"dolor Excepteur minim\"\n      },\n      \"url\": \"https://IWwHINgAXPMghaRtaVysyB.vvue+c45TujEKvM2bD7g-Zbi84lt,kI\",\n      \"name\": \"esse\",\n      \"title\": \"et ex\"\n    },\n    {\n      \"typeAnnotation\": {\n        \"typeName\": \"Ut velit est et\"\n      },\n      \"url\": \"http://UlPQgYfhxgsT.qjs,NuoelZb9lFueQfND9wTabHMAEW\",\n      \"name\": \"est pariatur tempor ex\",\n      \"title\": \"sunt esse reprehenderit\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "v1/$metadata",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json;odata.metadata=minimal;odata.streaming=true"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/$metadata",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"$metadata"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json;odata.metadata=minimal;odata.streaming=true"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/odata/$metadata",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"odata",
										"$metadata"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;odata.metadata=minimal;odata.streaming=true"
								}
							],
							"cookie": [],
							"body": "{\n  \"schemaElements\": [\n    {\n      \"schemaElementKind\": 5,\n      \"namespace\": \"mollit magna Excepteur\",\n      \"name\": \"aliquip si\"\n    },\n    {\n      \"schemaElementKind\": 2,\n      \"namespace\": \"cillum \",\n      \"name\": \"Duis nostrud aliquip occaecat\"\n    }\n  ],\n  \"vocabularyAnnotations\": [\n    {\n      \"qualifier\": \"consequat non labore\",\n      \"term\": {\n        \"type\": {\n          \"isNullable\": false,\n          \"definition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"appliesTo\": \"nulla\",\n        \"defaultValue\": \"laboris sint con\",\n        \"schemaElementKind\": 5,\n        \"namespace\": \"amet proident qui dolore\",\n        \"name\": \"laborum et pariatur ut\"\n      },\n      \"target\": {},\n      \"value\": {\n        \"expressionKind\": 24\n      }\n    },\n    {\n      \"qualifier\": \"aliquip\",\n      \"term\": {\n        \"type\": {\n          \"isNullable\": false,\n          \"definition\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"appliesTo\": \"consectetur sit\",\n        \"defaultValue\": \"laborum\",\n        \"schemaElementKind\": 5,\n        \"namespace\": \"ea amet\",\n        \"name\": \"dolore aute\"\n      },\n      \"target\": {},\n      \"value\": {\n        \"expressionKind\": 5\n      }\n    }\n  ],\n  \"referencedModels\": [\n    {\n      \"value\": \"<Circular reference to #/components/schemas/IEdmModel detected>\"\n    },\n    {\n      \"value\": \"<Circular reference to #/components/schemas/IEdmModel detected>\"\n    }\n  ],\n  \"declaredNamespaces\": [\n    \"Excepteur adipisicing\",\n    \"anim dolor\"\n  ],\n  \"directValueAnnotationsManager\": {},\n  \"entityContainer\": {\n    \"elements\": [\n      {\n        \"containerElementKind\": 1,\n        \"container\": {\n          \"value\": \"<Circular reference to #/components/schemas/IEdmEntityContainer detected>\"\n        },\n        \"name\": \"consectetur ut\"\n      },\n      {\n        \"containerElementKind\": 4,\n        \"container\": {\n          \"value\": \"<Circular reference to #/components/schemas/IEdmEntityContainer detected>\"\n        },\n        \"name\": \"laborum mollit\"\n      }\n    ],\n    \"schemaElementKind\": 0,\n    \"namespace\": \"voluptate\",\n    \"name\": \"laboris officia eu\"\n  }\n}"
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "",
			"type": "string"
		}
	]
}